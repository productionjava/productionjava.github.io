{"version":3,"sources":["img/book.png","img/zavod.jpg","reducers/RootReducer.js","reducers/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","__webpack_require__","p","RootReducer","state","arguments","length","undefined","config","email","token","action","type","payload","combineReducers","root","db","window","firebase","database","store","createStore","App","blogposts","localStorage","getItem","mail","console","log","app","this","ref","on","snapshot","val","setState","Object","toConsumableArray","values","props","changeConfig","objectSpread","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","Grid_default","container","spacing","item","xs","style","height","alignItems","alignContent","justify","sm","src","require","component","gutterBottom","Button_default","button","dist","blur","bgImage","bgImageAlt","strength","width","marginTop","Paper_default","paper","elevation","backgroundColor","margin","List_default","map","title","ListItem_default","ListItemText_default","primary","img","Component","WrappedApp","connect","dispatch","withStyles","theme","flexGrow","grow","menuButton","marginLeft","marginRight","display","maxWidth","maxHeight","padding","unit","textAlign","palette","text","secondary","AppWrapper","es","Boolean","location","hostname","match","ReactDOM","render","App_AppWrapper","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0096350f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book.7fd3346b.png\";","module.exports = __webpack_public_path__ + \"static/media/zavod.1d77fbf2.jpg\";","export default function (state = {\n  config: {\n    email: null,\n    token: null\n  },\n}, action) {\n  switch (action.type) {\n    case 'CONFIG_CHANGED':\n      return {config: action.payload}\n  }\n  // i dont care about the action because it is not inside my\n  // list of actions I am interested int (case statements inside the switch)\n  return state\n}\n","import { combineReducers } from 'redux';\nimport RootReducer from './RootReducer'\nconst rootReducer = combineReducers({\n  root: RootReducer\n});\nexport default rootReducer;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport logo from './logo.svg';\nimport './App.css';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Provider} from 'react-redux'\nimport rootReducer from './reducers'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport RootReducer from \"./reducers/RootReducer\";\nimport {createStore} from 'redux'\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport {Parallax, Background} from 'react-parallax';\nimport List from \"@material-ui/core/List/List\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\n\n\nconst db = window.firebase.database();\n\n\n// var blogpost = db.ref('blog/posts').push(\"test\");\n// blogpost.set({\n//     date: Date(),\n//     title: \"Website developed\",\n//     content: [\n//         {us: \"Finally website finished\"},\n//         {de: \"Endlich ist die Webseite fertig\"}\n//     ],\n// });\n\nconst store = createStore(RootReducer);\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\n\n\nclass App extends Component {\n    state = {\n        blogposts: []\n    };\n\n    componentDidMount() {\n        const token = localStorage.getItem('token')\n        const mail = localStorage.getItem('email')\n        console.log(\"db\", db);\n        let app = this;\n        db.ref('blog/posts').on('value', function (snapshot) {\n            let blogposts = snapshot.val();\n            console.log(\"posts\", blogposts)\n            app.setState({blogposts: [...Object.values(blogposts)]})\n        })\n        if (token != null) {\n            this.props.changeConfig({...this.props.config, token: token, email: mail});\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        console.log(this.props);\n        return (\n            <div className=\"App\">\n                <AppBar position=\"sticky\" color=\"default\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\">\n                            Production Javaâ„¢\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                        <Grid container style={{height: '80vh'}}>\n                            <Grid container spacing={24} alignItems={\"center\"} alignContent={\"center\"}\n                                  justify={\"center\"}>\n                                <Grid item xs={12} sm={6}>\n                                    <img src={require(\"./img/book.png\")}/>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Typography component=\"h3\" variant=\"h2\" gutterBottom>\n                                        Production Java\n                                    </Typography>\n                                    <Typography component=\"content\" variant=\"content\" gutterBottom>\n                                        This book will cure any desease, bootstrap self-driving cars and save your cat\n                                        from fire. Although I wish that it'll be true, but it's just placeholder text :C\n                                    </Typography>\n                                    <Typography component=\"content\" variant=\"content\" gutterBottom>\n                                        If you look closely, you'll see that on the left hand there needs to be some\n                                        picture\n                                    </Typography>\n                                    <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\n                                        Pre-order\n                                    </Button>\n                                    <Typography component=\"caption\" variant=\"caption\">\n                                        You won't be charged without your agreement\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <Grid container alignContent={\"center\"} justify={\"center\"} style={{height: '80vh'}}>\n                            <Parallax\n                                blur={10}\n                                bgImage={require('./img/zavod.jpg')}\n                                bgImageAlt=\"the cat\"\n                                strength={200}\n                                style={{height: '80vh', width: '100vw'}}\n                            >\n                                <Typography component=\"h3\" variant=\"h2\" gutterBottom\n                                            style={{color: \"white\", marginTop: \"5vh\"}}>\n                                    Enterprise world\n                                </Typography>\n                                <Typography component=\"content\" variant=\"content\" gutterBottom style={{color: \"white\"}}>\n                                    In the world of enterprise development, there's no chance to fail\n                                </Typography>\n                            </Parallax>\n                        </Grid>\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Paper className={classes.paper} elevation={0}>Lorem ipsum dolor sit amet, consectetur\n                            adipiscing elit. Nam at mauris non odio lacinia porta. Nunc pellentesque volutpat mi a\n                            mattis. Integer quis enim ultricies, tempus metus id, viverra mi. Proin non lectus id mauris\n                            iaculis iaculis a id dui. Nam fermentum dui in risus pellentesque ultricies. Curabitur lacus\n                            diam, maximus quis molestie ut, tempor vel lectus. Praesent ultricies magna orci, in\n                            porttitor lorem egestas eu. Morbi sed sem libero. Ut in ultricies magna. Morbi ac sapien\n                            fermentum mi feugiat volutpat sed in turpis. Integer mollis lectus ac tellus pharetra\n                            euismod. Donec quam lacus, euismod nec leo vel, condimentum suscipit tellus. Proin at nisl\n                            eu dolor venenatis porttitor. Maecenas sagittis pharetra hendrerit.\n\n                            Integer scelerisque enim vitae neque malesuada laoreet id eget eros. Sed efficitur faucibus\n                            fringilla. Mauris in arcu sed dolor posuere convallis vitae quis ipsum. Pellentesque\n                            habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Cras\n                            pellentesque, lectus eget malesuada ultrices, massa dolor dapibus nisi, quis consectetur\n                            enim arcu a purus. Suspendisse magna nunc, ultricies vitae fringilla eget, convallis\n                            fermentum libero. Donec at tellus sem. Ut dictum risus sit amet metus facilisis tristique.\n                            Ut accumsan maximus metus a aliquet.\n\n                            Donec id dapibus sapien. Nunc vel leo at diam tempor viverra eget nec nibh. Nullam pharetra\n                            egestas metus, nec lacinia velit tincidunt eu. Nunc fermentum a dui non finibus. Praesent\n                            euismod ornare nunc ut varius. Praesent dapibus maximus maximus. Ut orci tellus, commodo et\n                            eleifend a, pharetra ac dui. Morbi nec tellus risus. Mauris eget sodales dolor. Donec\n                            imperdiet erat vitae est consequat, sit amet commodo mauris condimentum. Maecenas feugiat\n                            ligula metus. Vestibulum convallis lacus maximus tortor commodo faucibus.\n\n                            Vestibulum vitae dolor nisl. Vivamus posuere, ipsum vitae ornare consequat, sem ligula\n                            volutpat metus, non scelerisque felis elit vel diam. Aliquam accumsan mattis lorem vel\n                            ornare. Ut laoreet pharetra orci, ut euismod lectus iaculis vel. Aliquam vehicula nulla at\n                            dictum sagittis. Nam ultricies mollis libero eget varius. Nullam porta nisi et erat lacinia\n                            pulvinar. Aliquam at odio turpis. Nam nec ultrices quam, id laoreet augue. Nulla commodo\n                            egestas eros nec bibendum. Praesent accumsan augue elit, at convallis turpis semper\n                            eu.</Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6} alignItems={\"center\"} justify={\"center\"} alignContent={\"center\"}>\n                        <Paper className={classes.paper} style={{backgroundColor: '#d8d8d8', margin: '5vh'}}>\n                            <Typography component=\"h5\" variant=\"h4\" gutterBottom style={{marginTop: \"1vh\"}}>\n                                What you will learn from this book\n                            </Typography>\n                            <List>\n                                {[\n                                    \"Become invisible\",\n                                    \"Take flight through space\",\n                                    \"Gain 100kg mass\",\n                                    \"Become invisible\",\n                                    \"Take flight through space\",\n                                    \"Gain 100kg mass\",\n                                    \"Become invisible\",\n                                    \"Take flight through space\",\n                                    \"Gain 100kg mass\",\n                                ].map(title =>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={\"â€¢ \" + title}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <Grid container alignContent={\"center\"} justify={\"center\"}\n                              style={{height: '80vh', backgroundColor: 'gray'}}>\n                            <Parallax\n                                blur={10}\n                                strength={200}\n                                style={{height: '80vh', width: '100vw'}}\n                            >\n                                <Typography component=\"h3\" variant=\"h2\" gutterBottom\n                                            style={{marginTop: \"5vh\"}}>\n                                    Step by step approach\n                                </Typography>\n                                <Typography component=\"content\" variant=\"content\" gutterBottom style={{}}>\n                                    Instead of describing everything in one stream, this book takes step by step\n                                    approach with each episode\n                                </Typography>\n\n                                <Grid container spacing={24}>\n                                    {[\"Modules\",\n                                        \"Applications\",\n                                        \"Microservices\",\n                                        \"Additions\"].map(item =>\n                                        <Grid item xs={6} sm={3}>\n                                            <Paper className={classes.paper}>\n                                                <img className={classes.img}\n                                                     src=\"https://images-na.ssl-images-amazon.com/images/I/81vZaXuCQ-L._SX385_.jpg\"/>\n                                                <Typography component=\"content\" variant=\"content\" gutterBottom>\n                                                    {item}\n                                                </Typography>\n                                            </Paper>\n                                        </Grid>\n                                    )}\n                                </Grid>\n                            </Parallax>\n                        </Grid>\n\n                    </Grid>\n                    {/*<Grid item xs={12} sm={12}>*/}\n                        {/*<Typography component=\"h3\" variant=\"h2\" gutterBottom>*/}\n                            {/*Updates*/}\n                        {/*</Typography>*/}\n                        {/*{this.state.blogposts.map(item =>*/}\n                            {/*<Paper style={{margin: '1vh'}}>{item.content[0].us}</Paper>*/}\n                        {/*)*/}\n                        {/*}*/}\n                    {/*</Grid>*/}\n                </Grid>\n            </div>\n        );\n    }\n}\n\n// Action\nconst increaseAction = {type: 'CONFIG_CHANGED'};\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state) {\n    return {\n        config: state.config,\n    };\n}\n\n// Map Redux actions to component props\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeConfig: (config) => dispatch({type: \"CONFIG_CHANGED\", payload: config})\n    }\n}\n\nconst WrappedApp = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App));\n\nexport default class AppWrapper extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <WrappedApp/>\n            </Provider>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}